compile:
gcc -g bucket_sort.c list.c -lm
run:
valgrind --leak-check=full ./a.out


Program output from one run with the code as given by the homework (no student code yet).
You will get a different number instead of the 641 below, and that is fine.

valgrind --leak-check=full ./a.out

==641== Memcheck, a memory error detector
==641== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==641== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==641== Command: ./a.out
==641==
==641== error calling PR_SET_PTRACER, vgdb might block
This program will read a file name, load data for an array from there and print the sorted array.
The array is sorted using bucket sort.
This will be repeated as long as the user wants.

-------run1 - this is a place holder. You need to edit this function.------

Do you want to repeat? Enter 1 to repeat, or 0 to stop) 1

-------run1 - this is a place holder. You need to edit this function.------

Do you want to repeat? Enter 1 to repeat, or 0 to stop) 1

-------run1 - this is a place holder. You need to edit this function.------

Do you want to repeat? Enter 1 to repeat, or 0 to stop) 1

-------run1 - this is a place holder. You need to edit this function.------

Do you want to repeat? Enter 1 to repeat, or 0 to stop) 0
==641==
==641== HEAP SUMMARY:
==641==     in use at exit: 0 bytes in 0 blocks
==641==   total heap usage: 2 allocs, 2 frees, 8,192 bytes allocated
==641==
==641== All heap blocks were freed -- no leaks are possible
==641==
==641== For lists of detected and suppressed errors, rerun with: -s
==641== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)