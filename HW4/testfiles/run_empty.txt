// see file content
cat empty.txt
2
10 40
10
* * * * 12 * 85 39 * *

//compile:
gcc -g run_test.c heap.c
//run:
valgrind --leak-check=full ./a.out
==172== Memcheck, a memory error detector
==172== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==172== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==172== Command: ./a.out
==172==
This program will create a max-heap and perform operations on it based on data from a file.

Enter the filename: empty.txt
in function make_heap, in DEBUG MODE, printing array BEFORE it gets turned into a heap :
Heap:  size: 2, capacity : 2
indexes:           0,      1,
values:           10,     40,

in function make_heap, in DEBUG MODE, printing array after sink_down at index 0.
Heap:  size: 2, capacity : 2
indexes:           0,      1,
values:           40,     10,

Heap:  size: 2, capacity : 2
indexes:           0,      1,
values:           40,     10,

Operation number 1, string: *
removed:     40
Heap:  size: 1, capacity : 2
indexes:           0,
values:           10,

Operation number 2, string: *
removed:     10
Heap:  size: 0, capacity : 2
indexes:
values:

Operation number 3, string: *
Empty heap. no remove performed.removed:      0
Heap:  size: 0, capacity : 2
indexes:
values:

Operation number 4, string: *
Empty heap. no remove performed.removed:      0
Heap:  size: 0, capacity : 2
indexes:
values:

Operation number 5, string: 12
add:          12
Heap:  size: 1, capacity : 2
indexes:           0,
values:           12,

Operation number 6, string: *
removed:     12
Heap:  size: 0, capacity : 2
indexes:
values:

Operation number 7, string: 85
add:          85
Heap:  size: 1, capacity : 2
indexes:           0,
values:           85,

Operation number 8, string: 39
add:          39
Heap:  size: 2, capacity : 2
indexes:           0,      1,
values:           85,     39,

Operation number 9, string: *
removed:     85
Heap:  size: 1, capacity : 2
indexes:           0,
values:           39,

Operation number 10, string: *
removed:     39
Heap:  size: 0, capacity : 2
indexes:
values:

==172==
==172== HEAP SUMMARY:
==172==     in use at exit: 0 bytes in 0 blocks
==172==   total heap usage: 5 allocs, 5 frees, 6,624 bytes allocated
==172==
==172== All heap blocks were freed -- no leaks are possible
==172==
==172== For lists of detected and suppressed errors, rerun with: -s
==172== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)